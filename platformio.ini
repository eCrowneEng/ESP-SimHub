[common]
lib_deps =
	adafruit/Adafruit GFX Library@^1.11.5
	adafruit/Adafruit LED Backpack Library@^1.1
	adafruit/Adafruit NeoPixel@^1.10.5
	adafruit/Adafruit PCD8544 Nokia 5110 LCD library@^2.0.1
	adafruit/Adafruit SSD1306@1.1.2
	adafruit/Adafruit WS2801 Library@1.1.1
	#includes fixes for esp
	https://github.com/9khil/LedControl#913cbcebb8ceea6783bb271d385d18b99c2d5e79
	marcoschwartz/LiquidCrystal_I2C@1.1.2
	fastled/FastLED@3.6
	smougenot/TM1637@0.0.0-alpha+sha.9486982048
	https://github.com/paulo-raca/ArduinoBufferedStreams.git#5e3a1a3d140955384a07878c64808e77fa2a7521
	noah1510/LedController @ ^1.7.0
	locoduino/RingBuffer@^1.0.4
	https://github.com/maxint-rd/TM16xx#95a1bdd959bf6fce75d0059f129386155f49f984
    https://github.com/khoih-prog/ESPAsync_WiFiManager

	#####
	# These libraries don't work either because they require arduino/atmel processors, 
	#   define timings based on them, or use interfaces not implemented by the ESPs
	#   such as joystick ({most} ESPs are incapable of implementing it with hardware)
	#   if you know how to fix the incompatibilities, you may do so by adding code in 
	#   lib/EspSimHub/EspSimHub.h
	######

	#adafruit/Adafruit Motor Shield library@^1.0.1
	#https://github.com/lincomatic/Colorduino
	#https://github.com/MHeironimus/ArduinoJoystickLibrary@^2.0.4
	#https://github.com/Antonded/NewTone
	#bhagman/Tone@^1.0.0
	#rjbatista/TM1638@^2.2.0
	#arduino-libraries/Robot Motor@^1.0.3
	#arduino-libraries/Robot Control@^1.0.4


#############################################
#  ESP8266
#
#  Comment out this whole block below if 
#   you're not compiling for this platform
#
#############################################
; [env:esp8266]
; platform = espressif8266
; # this should be set to your flavor of esp8266, for instance d1_mini
; board = nodemcuv2
; framework = arduino
; lib_deps = 
;   	${common.lib_deps}
; 	# add any libraries that are specific for the es8266

; build_flags = 
; 	-w -DESP8266
; monitor_speed = 19200 # set by simhub serial supporting code, if using wifi you can set this to 115200 and use it for debugging
; ;upload_port = COM4
; ;build_type = debug # set this to debug only for debugging, as it's slower.
; monitor_filters = esp8266_exception_decoder


#############################################
# ESP32
#
#  Comment out this whole block below if 
#   you're not compiling for this platform
#
#############################################
[env:esp32]
platform = espressif32@^6.2
# this should be set to your flavor of esp32, for instance wemos_d1_mini32
board = esp32doit-devkit-v1
board_build.f_cpu = 240000000L
framework = arduino
lib_deps = 
  	${common.lib_deps}
	# add any libraries that are specific for the esp32

build_flags = 
	-w -DESP32
monitor_speed = 115200 # set by simhub serial supporting code, if using wifi you can set this to 115200 and use it for debugging
; build_type = debug # set this to debug only for debugging, as it's slower.
monitor_filters = esp32_exception_decoder
;upload_port = COM4

